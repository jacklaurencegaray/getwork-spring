package com.springboot.getwork.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import com.springboot.getwork.model.LoginModel;
import com.springboot.getwork.model.Company;
import com.springboot.getwork.service.CompanyServiceImpl;

/**
 * @author Anthony
 *
 */
@RestController
@RequestMapping("/companies")
@CrossOrigin(value = "http://localhost:4200/")
public class CompanyController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CompanyServiceImpl companyService;

    @PostMapping("/login") // Map ONLY POST Requests
    public @ResponseBody Company login(@RequestParam("email") String email,
                                    @RequestParam("password") String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        return companyService.getCompanyByEmailPassword(email, password);

    }

    @PostMapping("/authenticate") // Map ONLY POST Requests
    public @ResponseBody Company authenticate(@RequestBody LoginModel loginCredentials) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        return companyService.getCompanyByEmailPassword(loginCredentials.getUsername(), loginCredentials.getPassword());

    }

    @PostMapping(value = "/register") // Map ONLY POST Requests
    public @ResponseBody String register(@Valid @RequestBody Company company) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        companyService.registerCompany(company);
        return "Saved company";
    }
    //
    @GetMapping(path = "/getAll")
    public @ResponseBody List<Company> getAllCompanies() {
        // This returns a JSON or XML with the users
        return companyService.getAll();
    }

    @GetMapping(path = "/getOne/{company_id}")
    public @ResponseBody Company getCompanyInfo(@PathVariable("company_id") Integer company_id) {
        // This returns a JSON or XML with the users
        return companyService.getCompanyInfo(company_id);
    }

}
